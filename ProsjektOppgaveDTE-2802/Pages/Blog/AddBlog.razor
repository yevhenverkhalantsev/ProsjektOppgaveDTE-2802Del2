@page "/blog"

@using ProsjektOppgaveBlazor.Data.CommonModels;
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h3>Create _blogModel</h3>

    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@_blogModel" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <div>
                        <label for="Name">BlogModel Name:</label>
                        <InputText class="form-control" @bind-Value="_blogModel.Name" />
                        <ValidationMessage For="@(()=>_blogModel.Name)" />

                    </div>
                    <div class="form-check form-switch">
                        <label for="Status">Allow post and comments</label>
                        <InputCheckbox class="form-check-input" @bind-Value="_blogModel.IsOpen" />
                        <ValidationMessage For="@(()=>_blogModel.IsOpen)" />
                    </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                    
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>


@code {
    
    private BlogModel _blogModel = new BlogModel();
    private HttpClient _httpClient = new HttpClient();


    private async Task<string> Save()
    {
        string token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        token = token.Trim('"');
        _httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        _httpClient.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));
        _httpClient.DefaultRequestHeaders.Host = "localhost:7115";
        var response = await _httpClient.PostAsJsonAsync("https://localhost:7022/api/Blog/Create", new
        {
            OwnerId = _blogModel.OwnerId,
            Name = _blogModel.Name,
            IsOpen = _blogModel.IsOpen
        });
        return response.IsSuccessStatusCode ? "Success" : "Failed";
    }

}