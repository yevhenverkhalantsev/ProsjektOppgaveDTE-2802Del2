@page "/Blog/Create"

@using ProsjektOppgaveBlazor.Data.CommonModels;
@using ProsjektOppgaveBlazor.Services.JwtServices
@inject IJSRuntime JSRuntime

@inject IJwtService JwtService

<h3>Create Blog</h3>

<AuthorizeView>
    
    <Authorized>
                <div class="row">
                    <div class="col-md-3">
                            <div class="form-group">
                                <div>
                                    <label for="Name">New blog for @(_username = context.User.Identity.Name):</label>
                                    <input class="form-control" type="text" @bind="_blogModel.Name"/>
        
                                </div>
                                <div class="form-check form-switch">
                                    <label for="Status">Allow post and comments</label>
                                    <input class="form-check-input" type="checkbox" @bind="_blogModel.IsOpen"/>
                                </div>
                                <button class="btn btn-primary" @onclick="() => Save()">Save</button>
                                <div style="margin-top: 5px" class="@_alertClass">@_alertMessage</div>
                            </div>
                    </div>
                </div>
    </Authorized>

</AuthorizeView>


@code {
    
    private BlogModel _blogModel = new BlogModel();
    private HttpClient _httpClient = new HttpClient();
    private string _username = string.Empty;
    private string _alertMessage = string.Empty;
    private string _alertClass = string.Empty;


    private async Task Save()
    {
        string token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        token = token.Trim('"');
        _httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        _httpClient.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));
        _httpClient.DefaultRequestHeaders.Host = "localhost:7115";
        var response = await _httpClient.PostAsJsonAsync("https://localhost:7022/api/Blog/Create", new
        {
            OwnerName = _username,
            Title = _blogModel.Name,
            IsOpen = _blogModel.IsOpen
        });
        
        var claims = JwtService.Decode(token);
        if (response.IsSuccessStatusCode){
            _alertMessage = "Blog created";
            _alertClass = "alert alert-success";
        }
        else
        {
            _alertMessage = "Blog not created";
            _alertClass = "alert alert-danger";
        }
        StateHasChanged();
    }

}