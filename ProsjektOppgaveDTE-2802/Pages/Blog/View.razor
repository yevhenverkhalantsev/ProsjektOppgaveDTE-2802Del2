@page "/blogs/view/{id:int}"
@using ProsjektOppgaveBlazor.Components.Post
@using ProsjektOppgaveBlazor.Data.CommonModels
@using Newtonsoft.Json

<div class="container">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title" style="color: black">@_blogModel.Title</h5>
            <CascadingValue Value="this">
                <CreatePostModal BlogId="Id"/>
            </CascadingValue>
            
        </div>
    </div>
@if (_blogModel.Posts != null && _blogModel.Posts.Count > 0)
{
    @foreach (var post in _blogModel.Posts)
    {
        <ViewPost Post="post"/>
    }
}
        
        <div class="modal fade" id="edit-comment-modal" tabindex="-1" >
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        Edit comment
                    </div>
                    <div class="modal-body">
                        <input type="text" class="form-control" id="edit-comment"/>
                    </div>
                    <div class="modal-footer">
                        <button id="btn-save-comment" type="button" style="margin-bottom: 10px" class="btn btn-success" onclick="saveCommentData()">Save</button>
                        <input class="d-none" id="close-edit-comment-button" data-dismiss="modal"/>
                    </div>
                </div>
            </div>
        </div>

            <div class="modal fade" id="edit-post-modal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header" id="edit-post-modal-header">Edit post: </div>
                        <div class="modal-body bg-secondary rounded h-100 p-4">

                            <div class="mb-3">
                                <label class="form-label">Title</label>
                                <input type="text" class="form-control" id="edit-post-title">
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Content</label>
                                <input type="text" class="form-control" id="edit-post-content">
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button id="btn-save" type="button" style="margin-bottom: 10px" class="btn btn-success" onclick="savePostData()">Save</button>

                            <div id="edit-success-label" class="alert alert-success d-none">
                                Updated successfully!
                            </div>
                            <div id="edit-error-label" class="alert alert-danger d-none">
                                Error on updated!
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

@code {

    [Parameter]
    public int Id { get; set; }

    private HttpClient _httpClient = new HttpClient();
    private BlogViewModel _blogModel = new BlogViewModel();

    public async Task CreateNewPostHandler(PostViewModel post)
    {
        _blogModel.Posts.Add(post);
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            HttpResponseMessage responseMessage = await _httpClient.GetAsync($"https://localhost:7022/api/Blog/{Id}");
            if (responseMessage.IsSuccessStatusCode)
            {
                string jsonResponse = await responseMessage.Content.ReadAsStringAsync();
                _blogModel = JsonConvert.DeserializeObject<BlogViewModel>(jsonResponse);
                StateHasChanged();
            }
        }
    }
}