@using ProsjektOppgaveBlazor.Data.CommonModels
@using System.Net.Http.Headers
@using ProsjektOppgaveBlazor.Pages.Blog
@inject IJSRuntime JsRuntime


<ModalDialog Title="Edit post" @ref="_modalDialog">
                <div class="modal-body bg-secondary rounded h-100 p-4">
    
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" id="post-title" @bind="_postModel.Title">
                    </div>
    
                    <div class="mb-3">
                        <label class="form-label">Content</label>
                        <input type="text" class="form-control" id="post-content" @bind="_postModel.Content">
                    </div>
    
                </div>
                <div class="modal-footer">
                    <button id="btnCreate" type="button" style="margin-bottom: 10px" class="btn btn-success" 
                            @onclick="EditPostHandler">Save</button>
    
                    <div id="create-success-label" class="alert alert-success d-none">
                        Created successfully!
                    </div>
                    <div id="create-error-label" class="alert alert-danger d-none">
                        Error on created!
                    </div>
                </div>
</ModalDialog>

@code {
    
    private PostViewModel _postModel = new PostViewModel();
    private ModalDialog _modalDialog = new ModalDialog();
    private HttpClient _httpClient = new HttpClient();
    private ElementReference _hideModalBtn = new ElementReference();
    
    private async Task EditPostHandler(MouseEventArgs e)
    {
        if (e.Button == 0)
        {
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await JsRuntime.InvokeAsync<string>("localStorage.getItem", "authToken"));
            HttpResponseMessage response = await _httpClient.PostAsJsonAsync("https://localhost:7022/api/post/update", _postModel);
            if (response.IsSuccessStatusCode)
            {
                _modalDialog.Close();
                _postModel.Title = "";
                _postModel.Content = "";
            }
        }
    }
    
    public void OpenModal(PostViewModel postModel)
    {
        _modalDialog.Open();
        _postModel = postModel;
        
        StateHasChanged();
    }
}